name: Deploy to GCE

on:
  push:
    branches:
      - main  # Deploy on push to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          ssh-keyscan -H ${{ secrets.GCE_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to GCE
        env:
          GCE_HOST: ${{ secrets.GCE_HOST }}
          GCE_USER: ${{ secrets.GCE_USER }}
          REPO_URL: ${{ secrets.REPO_URL }}
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $GCE_USER@$GCE_HOST "bash -s '$GCE_USER'" << 'ENDSSH'
            GCE_USER=$1
            echo "Starting deployment..."
            echo "Deploying as user: $GCE_USER"
            
            # Create directory structure if it doesn't exist
            mkdir -p /home/$GCE_USER/Backend
            
            # Navigate to the Backend directory
            cd /home/$GCE_USER/Backend
            
            # Check if src directory exists
            if [ ! -d "src" ]; then
              echo "Source directory not found. Creating fresh clone..."
              git clone https://github.com/LactCall/Backend.git src
            fi
            
            # Navigate to src directory
            cd src
            
            # Check if we're in the right directory
            echo "Current directory: $(pwd)"
            
            # Pull the latest changes
            git pull origin main
            
            # Install dependencies
            echo "Installing dependencies..."
            npm install
            
            # Start/Restart the server
            echo "Restarting server..."
            if pm2 list | grep -q "server"; then
              pm2 restart server
            else
              pm2 start server.js
            fi
            
            echo "Deployment completed!"
          ENDSSH


          #test
